{"ast":null,"code":"var _jsxFileName = \"/Users/tianalopez/Development_flatiron/code/phase-2/phase-2-project/phase-2-project/natl-parks-game/src/App.js\";\nimport './App.css';\nimport AnimalBoard from './AnimalBoard';\nimport Book from './Book';\nimport animals from './animalData';\nimport Hangman from \"./Hangman\";\nimport Home from './Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // //Score calculator specific to memory game\n  // //TODO Can be generalized to calculate score for every game?\n  // const calculateScore = (finalTime, finalCount) => {\n  //   const minimumMoves = 1\n  //   const minimumTime = Date.now()\n  //   //Awards player more points for lower number of moves and/or lower elapsed time, with a maximum of 10,000.\n  //   //TODO What should maximum points for each game be?\n  //   return Math.round((minimumTime / finalTime) * (minimumMoves / finalCount) * 10000)\n  // }\n\n  // //Receives elapsed time and number of moves from <AnimalBoard /> and passes it through calculateScore()\n  // const handleWin = (endTime, count) => {\n  //   const score = calculateScore(endTime, count)\n  //   console.log(`Congratulations, you earned ${score} points!`)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AnimalBoard","Book","animals","Hangman","Home","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tianalopez/Development_flatiron/code/phase-2/phase-2-project/phase-2-project/natl-parks-game/src/App.js"],"sourcesContent":["import './App.css'\nimport AnimalBoard from './AnimalBoard'\nimport Book from './Book'\nimport animals from './animalData'\nimport Hangman from \"./Hangman\"\nimport Home from './Home'\n\nconst App = () => {\n\n  // //Score calculator specific to memory game\n  // //TODO Can be generalized to calculate score for every game?\n  // const calculateScore = (finalTime, finalCount) => {\n  //   const minimumMoves = 1\n  //   const minimumTime = Date.now()\n  //   //Awards player more points for lower number of moves and/or lower elapsed time, with a maximum of 10,000.\n  //   //TODO What should maximum points for each game be?\n  //   return Math.round((minimumTime / finalTime) * (minimumMoves / finalCount) * 10000)\n  // }\n\n  // //Receives elapsed time and number of moves from <AnimalBoard /> and passes it through calculateScore()\n  // const handleWin = (endTime, count) => {\n  //   const score = calculateScore(endTime, count)\n  //   console.log(`Congratulations, you earned ${score} points!`)\n  // }\n\n  return (\n    <div className=\"App\">\n        {/*<Game /> component for memory game.*/}\n        {/* <AnimalBoard animals={animals} handleWin={handleWin} /> */}\n        {/* <Hangman /> */}\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAIhBH,OAAA,CAACF,IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAC,EAAA,GA1BKP,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}